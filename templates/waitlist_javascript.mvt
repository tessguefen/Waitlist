<script>
	<mvt:item name="waitlist" param="Waitlist_API_URL( l.all_settings:waitlist_url )" />
	var waitlist_api = '&mvtj:waitlist_url;';
	// ---- Update Display When Attribute Machine Fires ---- //
	var waitlist_form = document.getElementsByName('waitlist_add')[0];
	var waitlist_ajax_msg = document.getElementById('jsWaitlist_Message');

	var stock_level = '&mvtj:attributemachine:product:inv_level;';

	if (stock_level === 'out' && waitlist_form)
	{
		waitlist_form.style.display = 'block';
	}

	if (waitlist_form && waitlist_api)
	{
		waitlist_form.onsubmit = function onSubmit (form) {
			form.preventDefault();
			var waitlist_data = new FormData(waitlist_form);
			waitlist_data.append('WaitlistFunction', 'Waitlist_Add');
			waitlist_data.append('Product_Code', waitlist_data.get('Waitlist_Product_Code'));
			waitlist_data.append('Variant_ID', waitlist_data.get('Waitlist_Variant_ID'));
			waitlist_data.append('Email', waitlist_data.get('Waitlist_Email'));
			waitlist_data.delete('Action');

			var wishlist_call = new XMLHttpRequest();
			wishlist_call.open('POST', waitlist_api, true);

			wishlist_call.onload = function()
			{
				if (waitlist_ajax_msg)
				{
					waitlist_ajax_msg.classList = "";
					if (this.status === 200)
					{
						var wishlist_return = JSON.parse(this.responseText);

						if (wishlist_return.success === 0)
						{
							waitlist_ajax_msg.classList.add('x-messages', 'x-messages--error');
							waitlist_ajax_msg.innerHTML = wishlist_return.error_message;
						}
						else
						{
							waitlist_ajax_msg.innerHTML = 'Thank you for signing up!';
							waitlist_ajax_msg.classList.add('x-messages', 'x-messages--success');
						}
					}
					else
					{
						waitlist_ajax_msg.classList.add('x-messages', 'x-messages--error');
						waitlist_ajax_msg.innerHTML = 'An error has occurred.';
					}
				}
			};

			wishlist_call.send(waitlist_data);
		};
	}
</script>
