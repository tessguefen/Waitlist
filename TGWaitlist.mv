<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "TGWaitlist">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Waitlist">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Tess Guefen">
	<MvASSIGN NAME = "l.module:version"		VALUE = "2.000">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "9.12">
	<MvASSIGN NAME = "l.module:description"	VALUE = "Make it easy for customers to quickly sign up for email alerts on out of stock products. When products are back in stock, emails will be automatically sent out by a Scheduled Task. This works on Products & Variants.">
	<MvASSIGN NAME = "l.module:features"	VALUE = "data_store,not_prod,system,vis_system,json,clientside,scheduledtask,component,json_api">
</MvFUNCTION>

<MvCOMMENT>
|
|	Store-level Module Data Support Feature (data_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY	NAME	= "Merchant"
				QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGWaitlist
								(
									id				' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									time_added		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									product_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									variant_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
				 					email			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 255 )		$ ',
				 					cust_id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ '
								)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGWaitlists_1 ON ' $ g.Store_Table_Prefix $ 'TGWaitlist ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY	NAME	= "Merchant"
				QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGWaitlist_Sent
								(
									id				' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									time_added		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									time_sent		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									product_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									variant_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
				 					email			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 255 )		$ ',
				 					cust_id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ '
								)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGWaitlist_Sent_1 ON ' $ g.Store_Table_Prefix $ 'TGWaitlist_Sent ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGWaitlist', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	|	Create Page Template
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.page:code"				VALUE = "WaitlistEmailTemplate">
	<MvASSIGN NAME = "l.page:name"				VALUE = "Waitlist Email Template">
	<MvASSIGN NAME = "l.page:ui_id"				VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.page:admin"				VALUE = 1>
	<MvASSIGN NAME = "l.page:settings"			VALUE = "">

	<MvCAPTURE VARIABLE = "l.page:source">
		<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE FILE = "templates/WaitlistEmailTemplate.mvt" INTERPRET = "OFF"><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Page_LowLevel( l.page, l.source ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'store' ) OR
					NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'urls' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item( 'waitlist', l.module:code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.Error_Message ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Scheduled Task
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"				VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"		VALUE = "Trigger Waitlist Emails">
	<MvASSIGN NAME = "l.task:enabled"		VALUE = 1>
	<MvASSIGN NAME = "l.task:trig"			VALUE = "">
	<MvASSIGN NAME = "l.task:trig_delay"	VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"		VALUE = 7200>
	<MvASSIGN NAME = "l.task:runonce"		VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"		VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"	VALUE = 0>
	<MvASSIGN NAME = "l.task:lastrun"		VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"		VALUE = 0>
	<MvASSIGN NAME = "l.task:module_id"		VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"		VALUE = "waitlist_trigger">
	<MvASSIGN NAME = "l.task:config"		VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.version LT 1.007 }">
		<MvQUERY	NAME	= "Merchant"
				QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGWaitlist_Sent
								(
									id				' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									time_added		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									time_sent		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									product_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									variant_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
				 					email			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 255 )		$ ',
				 					cust_id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ '
								)' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.version LT 2.000 }">
		<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGWaitlists_1 ON ' $ g.Store_Table_Prefix $ 'TGWaitlist ( id )' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGWaitlist_Sent_1 ON ' $ g.Store_Table_Prefix $ 'TGWaitlist_Sent ( id )' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].Page_Load_Code( 'WaitlistEmailTemplate', l.page ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_Page( l.page ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGWaitlist' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGWaitlist_Sent' }">

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGWaitlist' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	Product Configuration Change Notification Feature (not_prod)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Product_Delete" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ Waitlist_Delete_All_Product( l.product:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Insert" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Update" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( 'waitlist_trigger' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	System Extensions Feature (system)
|
</MvCOMMENT>

<MvFUNCTION NAME = "SystemModule_Action" PARAMETERS = "module var, action" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.action EQ 'WAITLISTADD' }">
		<MvFUNCTIONRETURN VALUE = "{ Waitlist_Form_Add_Runtime() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SystemModule_Screen" PARAMETERS = "module var, screen" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SystemModule_UIException" PARAMETERS = "module var, exception" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	System Extension Settings Screen Feature (vis_system)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_System_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_System_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.tab NE 'TGWaitlist' AND l.tab NE 'TGWaitlist_Sent' }">
		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SYSM', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.tab EQ 'TGWaitlist' }">
		<MvEVAL EXPR = "{ Element_Waitlist_List_HTML( l.module ) }">
	<MvELSEIF EXPR = "{ l.tab EQ 'TGWaitlist_Sent' }">
		<MvEVAL EXPR = "{ Element_Waitlist_Sent_List_HTML( l.module ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_System_Head" PARAMETERS = "module var, tab" STANDARDOUTPUTLEVEL = "html, text, compresswhitespace">
	<MvIF EXPR = "{ l.tab NE 'TGWaitlist' AND l.tab NE 'TGWaitlist_Sent' }">
		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SYSM', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.tab EQ 'TGWaitlist' }">
		<MvEVAL EXPR = "{ Element_Waitlist_List_CSS( l.module ) }">
		<MvEVAL EXPR = "{ Element_Waitlist_List_JavaScript( l.module ) }">

		<script language="JavaScript">
			MMScreen_LoadFinished( function() { new Waitlist_Batchlist(); } );
		</script>
	<MvELSEIF EXPR = "{ l.tab EQ 'TGWaitlist_Sent'}">
		<MvEVAL EXPR = "{ Element_Waitlist_Sent_List_CSS( l.module ) }">
		<MvEVAL EXPR = "{ Element_Waitlist_Sent_List_JavaScript( l.module ) }">

		<script language="JavaScript">
			MMScreen_LoadFinished( function() { new Waitlist_Sent_Batchlist(); } );
		</script>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_System_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SYSM', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "TGWaitlist:Waitlist,TGWaitlist_Sent:Waitlist - Sent">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_System_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	JavaScript Object Notation Feature (json)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Module_Function EQ 'Waitlist_API' }">					<MvFUNCTIONRETURN VALUE = "{ Waitlist_API() }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Waitlist_Load_Query' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Waitlist_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Waitlist_Delete' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_Waitlist_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Waitlist_Trigger_Emails' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Waitlist_Trigger_Emails( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Waitlist_Sent_Load_Query' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Waitlist_Sent_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Waitlist_Sent_Delete' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Waitlist_Sent_Delete( l.module ) }">
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
|
|	Client Side Feature (clientside)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Clientside" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text,compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( '.js' EIN g.Filename ) EQ len_var( g.Filename ) }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
	</MvIF>

	<MvIF EXPR = "{ Module_Clientside_Output_File( l.module, g.Filename ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.null"	VALUE = "{ miva_output_header( 'Status', '404 Not Found' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Output_File" PARAMETERS = "module var, filename" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.filename EQ 'Waitlist_List.js' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "js/Waitlist_List.js"><MIVA STANDARDOUTPUTLEVEL = "">
	<MvELSEIF EXPR = "{ l.filename EQ 'Waitlist_Sent_List.js' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "js/Waitlist_Sent_List.js"><MIVA STANDARDOUTPUTLEVEL = "">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	Scheduled Task (scheduledtask)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ScheduledTaskModule_Capabilities" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities"						VALUE = "">
	<MvASSIGN NAME = "l.capabilities:provision"				VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:provision_settings"	VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Operations" PARAMETERS = "module var, operations var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.operations" INDEX = 1 MEMBER = "code"		VALUE = "waitlist_trigger">
	<MvASSIGN NAME = "l.operations" INDEX = 1 MEMBER = "descrip"	VALUE = "Trigger Waitlist Emails">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Fields" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Prompt" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Field" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Invalid" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Validate" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Update" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Delete" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Execute" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:operation EQ 'waitlist_trigger' }">
		<MvFUNCTIONRETURN VALUE = "{ Waitlist_Trigger_All() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', 'Unsupported operation' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
|	Component Feature (component)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Parse_Function_Parameters( l.param, l.function_name, l.parameters, l.parameter_count ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ l.function_name EQ 'waitlist_api_url' }">
		<MvIF EXPR = "{ l.parameter_count EQ 1 }">
			<MvIF EXPR = "{ NOT Is_Variable( l.parameters[1] ) }">
				<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'The first parameter must be a variable' ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT Waitlist_API_URL( l.module, l.parameters[1] ) }">
				<MvFUNCTIONRETURN>
			</MvIF>
		</MvIF>
	<MvELSEIF EXPR = "{ l.function_name EQ 'currentwaitlistcount' }">
		<MvIF EXPR = "{ l.parameter_count EQ 3 }">
			<MvIF EXPR = "{ NOT Is_Variable( l.parameters[3] ) }">
				<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'The third parameter must be a variable' ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT CurrentWaitlistCount( l.parameters[1], l.parameters[2], l.parameters[3] ) }">
				<MvFUNCTIONRETURN>
			</MvIF>
		</MvIF>
	<MvELSEIF EXPR = "{ l.function_name EQ 'waitlistxcustomer_load' }">
		<MvIF EXPR = "{ l.parameter_count EQ 2 }">
			<MvIF EXPR = "{ NOT Is_Variable( l.parameters[2] ) }">
				<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'The Second parameter must be a variable' ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT WaitlistXCustomer_Load( l.parameters[1], l.parameters[2] ) }">
				<MvFUNCTIONRETURN>
			</MvIF>
		</MvIF>
	<MvELSEIF EXPR = "{ l.function_name EQ 'waitlistxemail_load' }">
		<MvIF EXPR = "{ l.parameter_count EQ 2 }">
			<MvIF EXPR = "{ NOT Is_Variable( l.parameters[2] ) }">
				<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'The Second parameter must be a variable' ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT WaitlistXEmail_Load( l.parameters[1], l.parameters[2] ) }">
				<MvFUNCTIONRETURN>
			</MvIF>
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Head" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvCOMMENT>
|
|	Module JSON API Feature (json_api)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON_API" PARAMETERS = "module var, function" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.function EQ 'Waitlist_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_API_Waitlist_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'Waitlist_Trigger_All' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_API_Waitlist_Trigger_All( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'Waitlist_Add' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_API_Waitlist_Add( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', 'Invalid function' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
|	sNN_TGWaitlist
|
</MvCOMMENT>

<MvFUNCTION NAME = "Waitlist_Read" PARAMETERS = "waitlist var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.waitlist:id"			VALUE = "{ TGWaitlist.d.id }">
	<MvASSIGN NAME = "l.waitlist:time_added"	VALUE = "{ TGWaitlist.d.time_added }">
	<MvASSIGN NAME = "l.waitlist:product_id"	VALUE = "{ TGWaitlist.d.product_id }">
	<MvASSIGN NAME = "l.waitlist:variant_id"	VALUE = "{ TGWaitlist.d.variant_id }">
	<MvASSIGN NAME = "l.waitlist:email"			VALUE = "{ TGWaitlist.d.email }">
	<MvASSIGN NAME = "l.waitlist:cust_id" 		VALUE = "{ TGWaitlist.d.cust_id }">
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Load_ID" PARAMETERS = "id, waitlist var" STANDARDOUTPUTLEVEL = ""  ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "TGWaitlist"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGWaitlist WHERE id = ? ' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGWaitlist.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGWaitlist">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Waitlist_Read( l.waitlist ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGWaitlist">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Insert" PARAMETERS = "waitlist var" STANDARDOUTPUTLEVEL = ""  ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.waitlist:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGWaitlist' ) }">
	
	<MvIF EXPR = "{ ISNULL l.waitlist:time_added }">	<MvASSIGN NAME = "l.waitlist:time_added"	VALUE = "{ s.dyn_time_t }">	</MvIF>
	<MvIF EXPR = "{ ISNULL l.waitlist:variant_id }">	<MvASSIGN NAME = "l.waitlist:variant_id"	VALUE = 0>					</MvIF>
	<MvIF EXPR = "{ ISNULL l.waitlist:cust_id }">		<MvASSIGN NAME = "l.waitlist:cust_id"		VALUE = 0>					</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGWaitlist
			 			  ( id, time_added, product_id, variant_id, email, cust_id )
						  VALUES
						  ( ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.waitlist:id, l.waitlist:time_added, l.waitlist:product_id, l.waitlist:variant_id, l.waitlist:email, l.waitlist:cust_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Check_Email" PARAMETERS = "product_id, variant_id, email, waitlist var" STANDARDOUTPUTLEVEL = ""  ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "TGWaitlist"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGWaitlist WHERE product_id = ? AND variant_id = ? AND email = ?' }"
				FIELDS	= "l.product_id, l.variant_id, l.email">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGWaitlist.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGWaitlist">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Waitlist_Read( l.waitlist ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGWaitlist">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Check_Customer" PARAMETERS = "product_id, variant_id, cust_id, waitlist var" STANDARDOUTPUTLEVEL = ""  ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "TGWaitlist"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGWaitlist WHERE product_id = ? AND variant_id = ? AND cust_id = ?' }"
				FIELDS	= "l.product_id, l.variant_id, l.cust_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGWaitlist.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGWaitlist">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Waitlist_Read( l.waitlist ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGWaitlist">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Delete" PARAMETERS = "id" STANDARDOUTPUTLEVEL = ""  ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGWaitlist WHERE id = ?' }"
			 FIELDS = "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Delete_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = ""  ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGWaitlist WHERE product_id = ?' }"
			 FIELDS = "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	sNN_TGWaitlist_Sent
|
</MvCOMMENT>

<MvFUNCTION NAME = "Waitlist_Sent_Read" PARAMETERS = "waitlist_sent var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.waitlist_sent:id"			VALUE = "{ TGWaitlist_Sent.d.id }">
	<MvASSIGN NAME = "l.waitlist_sent:time_added"	VALUE = "{ TGWaitlist_Sent.d.time_added }">
	<MvASSIGN NAME = "l.waitlist_sent:time_sent"	VALUE = "{ TGWaitlist_Sent.d.time_sent }">
	<MvASSIGN NAME = "l.waitlist_sent:product_id"	VALUE = "{ TGWaitlist_Sent.d.product_id }">
	<MvASSIGN NAME = "l.waitlist_sent:variant_id"	VALUE = "{ TGWaitlist_Sent.d.variant_id }">
	<MvASSIGN NAME = "l.waitlist_sent:email"		VALUE = "{ TGWaitlist_Sent.d.email }">
	<MvASSIGN NAME = "l.waitlist_sent:cust_id" 		VALUE = "{ TGWaitlist_Sent.d.cust_id }">
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Sent_Load_ID" PARAMETERS = "id, waitlist_sent var" STANDARDOUTPUTLEVEL = ""  ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "TGWaitlist_Sent"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGWaitlist_Sent WHERE id = ? ' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGWaitlist_Sent.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGWaitlist_Sent">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Waitlist_Sent_Read( l.waitlist ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGWaitlist_Sent">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Sent_Insert" PARAMETERS = "waitlist var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Waitlist_Delete_Product( l.waitlist ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT Waitlist_Delete( l.waitlist:id ) }">	<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Sent_Insert_LowLevel" PARAMETERS = "waitlist_sent var" STANDARDOUTPUTLEVEL = ""  ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.waitlist_sent:time_sent"	VALUE = "{ s.dyn_time_t }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGWaitlist_Sent
			 			  ( id, time_added, time_sent, product_id, variant_id, email, cust_id )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.waitlist_sent:id, l.waitlist_sent:time_added, l.waitlist_sent:time_sent, l.waitlist_sent:product_id,
			 		   l.waitlist_sent:variant_id, l.waitlist_sent:email, l.waitlist_sent:cust_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Sent_Delete" PARAMETERS = "id" STANDARDOUTPUTLEVEL = ""  ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGWaitlist_Sent WHERE id = ?' }"
			 FIELDS = "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Sent_Delete_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = ""  ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGWaitlist_Sent WHERE product_id = ?' }"
			 FIELDS = "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	Custom Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Waitlist_Delete_All_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Waitlist_Delete_Product( l.product_id ) }">				<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT Waitlist_Sent_Delete_Product( l.product_id ) }">	<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	Waitlist Trigger Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Waitlist_Trigger_All" PARAMETERS = "" STANDARDOUTPUTLEVEL = ""  ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "TGWaitlist"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGWaitlist ORDER BY product_id ASC, variant_id ASC' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.waitlists_count"	VALUE = 0>
	<MvASSIGN NAME = "l.waitlists"			VALUE = "">

	<MvWHILE EXPR = "{ NOT TGWaitlist.d.EOF }">
		<MvASSIGN NAME = "l.waitlist_count" VALUE = "{ l.waitlist_count + 1 }">
		<MvEVAL EXPR = "{ Waitlist_Read( l.waitlists[ l.waitlist_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "TGWaitlist" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGWaitlist">

	<MvFOREACH ITERATOR = "l.waitlist" ARRAY = "l.waitlists">
		<MvASSIGN NAME = "l.success" VALUE = "{ Waitlist_Trigger_Email( l.waitlist) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Trigger_Email" PARAMETERS = "waitlist var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Waitlist_Trigger_Check( l.waitlist ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ Waitlist_Email_Format( l.waitlist ) }">

	<MvFUNCTIONRETURN VALUE = "{ Waitlist_Trigger_Email_LowLevel( l.waitlist ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Trigger_Check" PARAMETERS = "waitlist var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.waitlist:product_id EQ 0 }">
		<MvASSIGN NAME = "l.null" VALUE = "{ Waitlist_Delete( l.waitlist:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	|	Re-assigning the basket `cust_id` for Availability Groups
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.original_cust_id"	VALUE = "{ g.Basket:cust_id }">
	<MvASSIGN NAME = "g.Basket:cust_id"		VALUE = "{ l.waitlist:cust_id }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Runtime_Product_Load_ID( l.waitlist:product_id, l.waitlist:product ) }">
		<MvASSIGN NAME = "g.Basket:cust_id" VALUE = "{ l.original_cust_id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.continue" VALUE = 0>

	<MvIF EXPR = "{ l.waitlist:variant_id GT 0 }">
		<MvDO FILE = "{ g.Module_Feature_INV_RT }" NAME = "l.continue" VALUE = "{ Inventory_Is_Available_Variant( l.waitlist:product, l.waitlist:variant_id, 1 ) }">
	<MvELSE>
		<MvDO FILE = "{ g.Module_Feature_INV_RT }" NAME = "l.continue" VALUE = "{ Inventory_Is_Available_LowLevel( l.waitlist:product, 1 ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Waitlist_Logic_Override( l.waitlist, l.continue ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "g.Basket:cust_id" VALUE = "{ l.original_cust_id }">

	<MvIF EXPR = "{ l.continue LE 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Logic_Override" PARAMETERS = "waitlist var, continue var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_Code( 'WaitlistEmailLogic', l.logic_page ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_ID( l.logic_page:templ_id, l.waitlist_logic_template ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Load and initialize items
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.item_pos"			VALUE = 1>
	<MvASSIGN NAME = "l.item_count"			VALUE = "{ [ g.Module_Feature_TUI_DB ].ItemModuleList_Load_Page_Render( l.logic_page:id,			l.logic_page:settings:_mgr ) }">
	<MvASSIGN NAME = "l.extension_count"	VALUE = "{ [ g.Module_Feature_TUI_DB ].ItemExtensionModuleList_Load_Page_Render( l.logic_page:id,	l.logic_page:settings:_mgr ) }">

	<MvWHILE EXPR = "{ l.item_pos LE l.item_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Initialize_Item_LowLevel( l.logic_page:settings, l.logic_page:settings:_mgr:items[ l.item_pos ] ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ g.TemplateManager_Exception }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', 'Item \'' $ l.logic_page:settings:_mgr:items[ l.item_pos ]:item_code $ '\' threw exception \'' $ g.TemplateManager_Exception_Code $ '\' during initialization' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.item_pos"	VALUE = "{ l.item_pos + 1 }">
	</MvWHILE>

	<MvASSIGN NAME = "l.all_settings"									VALUE = "{ l.logic_page:settings }">
	<MvASSIGN NAME = "l.all_settings:waitlist"							VALUE = "{ l.waitlist }">
	<MvASSIGN NAME = "l.all_settings:waitlist:original_determination"	VALUE = "{ l.continue }">

	<MvCOMMENT>
	|
	|	Looking for g.Waitlist_Email_Continue (0/1)
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "g.Waitlist_Email_Continue" VALUE = "">

	<MvCAPTURE VARIABLE = "l.success">
		<MvDO FILE = "{ g.Store_Template_Path $ l.waitlist_logic_template:filename }" NAME = "l.success" VALUE = "{ Template_Render( l.settings, l.all_settings ) }">
	</MvCAPTURE>

	<MvIF EXPR = "{ NOT ISNULL( g.Waitlist_Email_Continue ) }">
		<MvIF EXPR = "{ g.Waitlist_Email_Continue EQ 1 }">		<MvASSIGN NAME = "l.continue" VALUE = 1>
		<MvELSEIF EXPR = "{ g.Waitlist_Email_Continue EQ 0 }">	<MvASSIGN NAME = "l.continue" VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Email_Format" PARAMETERS = "waitlist var" STANDARDOUTPUTLEVEL = "">
	<MvDO FILE = "{ g.Module_Library_Utilities }"	NAME = "l.waitlist:formatted_date"	VALUE = "{ Format_Date( l.waitlist:time_added, s.miva_language ) }">

	<MvIF EXPR = "{ l.waitlist:variant_id GT 0 }">
		<MvFOREACH ITERATOR = "l.variant" ARRAY = "l.waitlist:variants" COUNT = "{ [ g.Module_Library_DB ].ProductVariantPartList_Load_Variant( l.waitlist:product_id, l.waitlist:variant_id, l.waitlist:variants ) }">
			<MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.success" VALUE = "{ Product_Load_ID_WithRuntimeInventory( l.variant:part_id, l.variant:product ) }">
		</MvFOREACH>
	
		<MvIF EXPR = "{ [ g.Module_Library_DB ].ProductVariantList_Load_Variant( l.waitlist:product:id, l.waitlist:variant_id, l.waitlist:options ) }">
			<MvEVAL EXPR = "{ Waitlist_Format_Variant_Options( l.waitlist:options ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Format_Variant_Options" PARAMETERS = "options var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.option" ARRAY = "l.options">
		<MvIF EXPR = "{ l.option:attmpat_id GT 0 }">
			<MvDO FILE = "{ g.Module_Library_DB }"		NAME = "l.success" VALUE = "{ Attribute_Load_ID( l.option:attr_id, l.option:attribute ) }">
			<MvDO FILE = "{ g.Module_Feature_ATT_DB }"	NAME = "l.success" VALUE = "{ AttributeTemplateAttr_Load_ID( l.option:attmpat_id, l.option:product_attribute ) }">
			<MvDO FILE = "{ g.Module_Feature_ATT_DB }"	NAME = "l.success" VALUE = "{ AttributeTemplate_Load_ID( l.option:attribute:attemp_id, l.option:attributetemplate ) }">
			<MvDO FILE = "{ g.Module_Feature_ATT_DB }"	NAME = "l.success" VALUE = "{ AttributeTemplateOption_Load_ID( l.option:option_id, l.option:option ) }">
		<MvELSE>
			<MvDO FILE = "{ g.Module_Library_DB }"		NAME = "l.success" VALUE = "{ Attribute_Load_ID( l.option:attr_id, l.option:attribute ) }">
			<MvDO FILE = "{ g.Module_Library_DB }"		NAME = "l.success" VALUE = "{ Option_Load_ID( l.option:option_id, l.option:option ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Trigger_Email_Lowlevel" PARAMETERS = "waitlist var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_Code( 'WaitlistEmailTemplate', l.page ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_ID( l.page:templ_id, l.waitlist_email_template ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Load and initialize items
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.item_pos"			VALUE = 1>
	<MvASSIGN NAME = "l.item_count"			VALUE = "{ [ g.Module_Feature_TUI_DB ].ItemModuleList_Load_Page_Render( l.page:id,			l.page:settings:_mgr ) }">
	<MvASSIGN NAME = "l.extension_count"	VALUE = "{ [ g.Module_Feature_TUI_DB ].ItemExtensionModuleList_Load_Page_Render( l.page:id,	l.page:settings:_mgr ) }">

	<MvWHILE EXPR = "{ l.item_pos LE l.item_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Initialize_Item_LowLevel( l.page:settings, l.page:settings:_mgr:items[ l.item_pos ] ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ g.TemplateManager_Exception }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', 'Item \'' $ l.page:settings:_mgr:items[ l.item_pos ]:item_code $ '\' threw exception \'' $ g.TemplateManager_Exception_Code $ '\' during initialization' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.item_pos"	VALUE = "{ l.item_pos + 1 }">
	</MvWHILE>

	<MvASSIGN NAME = "l.all_settings"			VALUE = "{ l.page:settings }">
	<MvASSIGN NAME = "l.all_settings:waitlist"	VALUE = "{ l.waitlist }">

	<MvCAPTURE VARIABLE = "l.message">
		<MvDO FILE = "{ g.Store_Template_Path $ l.waitlist_email_template:filename }" NAME = "l.success" VALUE = "{ Template_Render( l.settings, l.all_settings ) }">
	</MvCAPTURE>

	<MvASSIGN NAME ="l.email_headers"	VALUE = "{ 'Content-Type: text/html; charset=ISO-8859-1' $ asciichar( 13 ) $ asciichar( 10 ) $ asciichar( 13 ) $ asciichar( 10 ) }">
	<MvASSIGN NAME = "l.subject"		VALUE = "{ l.waitlist:product:name $ ' is back in stock!' }">
	<MvASSIGN NAME = "l.from"			VALUE = "{ g.Store:Email }">

	<MvIF EXPR = "{ NOT ISNULL g.Email_Subject }">
		<MvASSIGN NAME = "l.subject"	VALUE = "{ g.Email_Subject }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL g.Email_From }">
		<MvASSIGN NAME = "l.from"		VALUE = "{ g.Email_From }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Issues with SendEmail sometimes returning a failure have happened in the past, so we don't check the return value.
	|
	</MvCOMMENT>

	<MvDO FILE = "{ g.Module_Library_Utilities }" NAME = "l.null"  VALUE = "{ SendEmail( l.waitlist:email, l.from, '', l.subject, l.email_headers, l.message ) }">

	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Admin ].Admin_Log_Action( '#Error#', 'Waitlist Email triggered to' $ l.waitlist:email ) }">

	<MvIF EXPR = "{ NOT Waitlist_Sent_Insert( l.waitlist ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	Runtime Waitlist Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Waitlist_Form_Add_Runtime" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Waitlist_Error"		VALUE = "">
	<MvASSIGN NAME = "g.Waitlist_Message"	VALUE = "">

	<MvIF EXPR = "{ NOT Waitlist_Form_Add_Runtime_LowLevel( g.Waitlist_Product_Code, g.Waitlist_Variant_ID, g.Waitlist_Email, g.Basket:cust_id, 1 ) }">
		<MvASSIGN NAME = "g.Waitlist_Error" VALUE = "{ g.Error_Message }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "g.Waitlist_Message" VALUE = "{ 'Success! You have been added to the waitlist.' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Form_Add_Runtime_LowLevel" PARAMETERS = "product_code, variant_id, email, cust_id, prelogic" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.product_code"	VALUE = "{ trim( l.product_code ) }">
	<MvASSIGN NAME = "l.variant_id"		VALUE = "{ int( l.variant_id ) }">
	<MvASSIGN NAME = "l.email"			VALUE = "{ trim( l.email ) }">
	<MvASSIGN NAME = "l.cust_id"		VALUE = "{ int( l.cust_id ) }">
	<MvASSIGN NAME = "l.prelogic"		VALUE = "{ int( l.prelogic ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Email( l.email ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', 'Please enter a valid email.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.product_code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', 'Missing Product Code.' ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Runtime_Product_Load_Code_Cached( l.product_code, l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', 'Invalid Product Code.' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.variant_id EQ 0 }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].ProductVariantList_Load_Product( l.product:id, l.productvariants ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', 'A valid variant was not found.' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].ProductVariantPartList_Load_Variant( l.product:id, l.variant_id, l.productvariantparts ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', 'Invalid variant.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.waitlist:product_id"	VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.waitlist:variant_id"	VALUE = "{ l.variant_id }">
	<MvASSIGN NAME = "l.waitlist:email"			VALUE = "{ l.email }">
	<MvASSIGN NAME = "l.waitlist:cust_id" 		VALUE = "{ l.cust_id }">

	<MvIF EXPR = "{ l.waitlist:cust_id GT 0 }">
		<MvIF EXPR = "{ Waitlist_Check_Customer( l.waitlist:product_id, l.waitlist:variant_id, l.waitlist:cust_id, l.existing_waitlist ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', 'Customer is already on the Waitlist for this product.' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ Waitlist_Check_Email( l.waitlist:product_id, l.waitlist:variant_id, l.waitlist:email, l.existing_waitlist ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', 'Email is already on the Waitlist for this product.' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.prelogic EQ 1 }">
		<MvIF EXPR = "{ NOT Waitlist_PreLogic_Override( l.waitlist ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Waitlist_Insert( l.waitlist ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_PreLogic_Override" PARAMETERS = "waitlist var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_Code( 'WaitlistEmailPreLogic', l.logic_page ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_ID( l.logic_page:templ_id, l.waitlist_logic_template ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Load and initialize items
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.item_pos"			VALUE = 1>
	<MvASSIGN NAME = "l.item_count"			VALUE = "{ [ g.Module_Feature_TUI_DB ].ItemModuleList_Load_Page_Render( l.logic_page:id,			l.logic_page:settings:_mgr ) }">
	<MvASSIGN NAME = "l.extension_count"	VALUE = "{ [ g.Module_Feature_TUI_DB ].ItemExtensionModuleList_Load_Page_Render( l.logic_page:id,	l.logic_page:settings:_mgr ) }">

	<MvWHILE EXPR = "{ l.item_pos LE l.item_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Initialize_Item_LowLevel( l.logic_page:settings, l.logic_page:settings:_mgr:items[ l.item_pos ] ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ g.TemplateManager_Exception }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', 'Item \'' $ l.logic_page:settings:_mgr:items[ l.item_pos ]:item_code $ '\' threw exception \'' $ g.TemplateManager_Exception_Code $ '\' during initialization' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.item_pos"	VALUE = "{ l.item_pos + 1 }">
	</MvWHILE>

	<MvASSIGN NAME = "l.all_settings"			VALUE = "{ l.logic_page:settings }">
	<MvASSIGN NAME = "l.all_settings:waitlist"	VALUE = "{ l.waitlist }">

	<MvCOMMENT>
	|
	|	Looking for g.Waitlist_PreLogic_Continue (0/1)
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "g.Waitlist_PreLogic_Continue" VALUE = 1>

	<MvCAPTURE VARIABLE = "l.success">
		<MvDO FILE = "{ g.Store_Template_Path $ l.waitlist_logic_template:filename }" NAME = "l.success" VALUE = "{ Template_Render( l.settings, l.all_settings ) }">
	</MvCAPTURE>

	<MvIF EXPR = "{ g.Waitlist_PreLogic_Continue EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	JSON & JSON API Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_Waitlist_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Waitlist_Load_Query_LowLevel( l.module ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_API_Waitlist_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'api' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Waitlist_Load_Query_LowLevel( l.module ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Waitlist_Load_Query_LowLevel" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SYSM', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )				OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )				OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Offset',	l.offset,	-1, -1 )	OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Count',	l.count,	-1, -1 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'tgw.*,
																				p.code as product_code,
																				pv.code as variant_code,
																				pv.id as variant_product_id,
																				p.name as product_name,
																				pv.name as variant_name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGWaitlist', 'tgw' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'tgw', g.Store_Table_Prefix $ 'Products', 'p', 'tgw.product_id = p.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'tgw', g.Store_Table_Prefix $ 'ProductVariantParts', 'pvp', 'tgw.variant_id = pvp.variant_id AND tgw.product_id = pvp.product_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'tgw', g.Store_Table_Prefix $ 'Products', 'pv', 'pvp.part_id = pv.id', '' ) }">
	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter,
													 'id:tgw.id,time_added:tgw.time_added,product_id:tgw.product_id,variant_id:tgw.variant_id,email:tgw.email,cust_id:tgw.cust_id,product_code:p.code,variant_code:pv.code,product_name:p.name,variant_name:pv.name' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, l.sort,
																		'id:tgw.id,time_added:tgw.time_added,product_id:tgw.product_id,variant_id:tgw.variant_id,email:tgw.email,cust_id:tgw.cust_id,product_code:p.code,variant_code:pv.code,product_name:p.name,variant_name:pv.name',
																		'tgw.time_added' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'TGWaitlist', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.waitlist_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT TGWaitlist.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.waitlist_count LT l.count ) ) }">
			<MvASSIGN NAME = "l.product"	VALUE = "">

			<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_ID_WithRuntimeInventory( TGWaitlist.d.product_id, l.product ) }">
				<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Feature_INV_RT ].Inventory_Load_Variant( l.product, TGWaitlist.d.variant_id ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.waitlist_count ) }">
				"id":				<MvEVAL EXPR = "{ int( TGWaitlist.d.id ) }">,
				"time_added":		<MvEVAL EXPR = "{ int( TGWaitlist.d.time_added ) }">,
				"product_id":		<MvEVAL EXPR = "{ int( TGWaitlist.d.product_id ) }">,
				"variant_id":		<MvEVAL EXPR = "{ int( TGWaitlist.d.variant_id ) }">,
				"email":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGWaitlist.d.email ) }">",
				"cust_id":			<MvEVAL EXPR = "{ int( TGWaitlist.d.cust_id ) }">,
				"product_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGWaitlist.d.product_code ) }">",
				"product_name":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGWaitlist.d.product_name ) }">",
				"variant_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGWaitlist.d.variant_code ) }">",
				"variant_name":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGWaitlist.d.variant_name ) }">",
				<MvIF EXPR = "{ NOT ISNULL l.product:inv_available }">
					"inv_count":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.product:inv_available ) }">"
				<MvELSE>
					"inv_count":	"N/A"
				</MvIF>
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "TGWaitlist" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGWaitlist">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Waitlist_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Waitlist_Delete_LowLevel( l.module ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Waitlist_Delete_LowLevel" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SYSM', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Number( 'R', 'ID',	l.id, -1, -1 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT Waitlist_Delete( l.id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( '#Error#', 'Deleted waitlist entry \'' $ l.id $ '\'' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Waitlist_Trigger_Emails" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SYSM', 0, 0, 1, 1 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Number_Array( 'R', 'Waitlists', l.waitlists, l.waitlists_count, -1, -1 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">

	<MvFOREACH ITERATOR = "l.id" ARRAY = "l.waitlists" COUNT = "{ l.waitlists_count }">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT Waitlist_Load_ID( l.id, l.waitlist ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvASSIGN NAME = "l.error_count" VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.id, g.Error_Code, g.Error_Message, l.errors ) }">
			</MvIF>
		<MvELSE>
			<MvASSIGN NAME = "l.null" VALUE = "{ Waitlist_Trigger_Email( l.waitlist ) }">
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Waitlist_Sent_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Waitlist_Sent_Load_Query_LowLevel( l.module ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Waitlist_Sent_Load_Query_LowLevel" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SYSM', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )				OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )				OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Offset',	l.offset,	-1, -1 )	OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Count',	l.count,	-1, -1 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'tgws.*,
																				 p.code as product_code,
																				 pv.code as variant_code,
																				 pv.id as variant_product_id,
																				 p.name as product_name,
																				 pv.name as variant_name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGWaitlist_Sent', 'tgws' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'tgws', g.Store_Table_Prefix $ 'Products', 'p', 'tgws.product_id = p.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'tgws', g.Store_Table_Prefix $ 'ProductVariantParts', 'pvp', 'tgws.variant_id = pvp.variant_id AND tgws.product_id = pvp.product_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'tgws', g.Store_Table_Prefix $ 'Products', 'pv', 'pvp.part_id = pv.id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter,
													 'id:tgws.id,time_added:tgws.time_added,time_sent:tgws.time_sent,product_id:tgws.product_id,variant_id:tgws.variant_id,email:tgws.email,cust_id:tgws.cust_id,product_code:p.code,variant_code:pv.code,product_name:p.name,variant_name:pv.name' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, l.sort,
																		'id:tgws.id,time_added:tgws.time_added,time_sent:tgws.time_sent,product_id:tgws.product_id,variant_id:tgws.variant_id,email:tgws.email,cust_id:tgws.cust_id,product_code:p.code,variant_code:pv.code,product_name:p.name,variant_name:pv.name',
																		'tgws.time_sent' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGWaitlist_Sent', l.search_sql, l.search_fields, l.offset, l.count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.waitlist_sent_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
			<MvWHILE EXPR = "{ ( NOT TGWaitlist_Sent.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.waitlist_sent_count LT l.count ) ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.waitlist_sent_count ) }">
					"id":			<MvEVAL EXPR = "{ int( TGWaitlist_Sent.d.id ) }">,
					"time_added":	<MvEVAL EXPR = "{ int( TGWaitlist_Sent.d.time_added ) }">,
					"time_sent":	<MvEVAL EXPR = "{ int( TGWaitlist_Sent.d.time_sent ) }">,
					"product_id":	<MvEVAL EXPR = "{ int( TGWaitlist_Sent.d.product_id ) }">,
					"variant_id":	<MvEVAL EXPR = "{ int( TGWaitlist_Sent.d.variant_id ) }">,
					"email":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGWaitlist_Sent.d.email ) }">",
					"cust_id":		<MvEVAL EXPR = "{ int( TGWaitlist_Sent.d.cust_id ) }">,
					"product_code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGWaitlist_Sent.d.product_code ) }">",
					"product_name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGWaitlist_Sent.d.product_name ) }">",
					"variant_code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGWaitlist_Sent.d.variant_code ) }">",
					"variant_name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGWaitlist_Sent.d.variant_name ) }">"
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

				<MvSKIP NAME = "Merchant" VIEW = "TGWaitlist_Sent" ROWS = 1>
			</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGWaitlist_Sent">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Waitlist_Sent_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Waitlist_Sent_Delete_LowLevel( l.module ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Waitlist_Sent_Delete_LowLevel" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SYSM', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Number( 'R', 'ID',	l.id, -1, -1 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT Waitlist_Sent_Delete( l.id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( '#Error#', 'Deleted waitlist entry \'' $ l.id $ '\'' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvCOMMENT>
|
|	JSON API Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_API_Waitlist_Trigger_All" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'api' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SYSM', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvEVAL EXPR = "{ Waitlist_Trigger_All_ASYNC( l.session_id ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"session_id": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.session_id ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Trigger_All_ASYNC" PARAMETERS = "session_id var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.session_id" VALUE = "{ MakeSessionID() }">

	<MvASYNC>
		<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Initialize_Async_Environment( 'admin', g.Store:code ) }">
			<MvEXIT>
		</MvIF>

		<MvLOCKFILE FILE = "{ Waitlist_Lockfile_Path( l.session_id ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ Waitlist_Trigger_All() }">
		</MvLOCKFILE>
	</MvASYNC>
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_Lockfile_Path" PARAMETERS = "session_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ g.MerchantPath $ 'waitlist_' $  l.session_id }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_API_Waitlist_Add" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'api' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SYSM', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{	NOT [ g.Module_JSON ].JSON_Input_Text(		'R', 'Product_Code',	l.product_code )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'R', 'Email',			l.email )				OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Variant_ID',		l.variant_id, -1, -1 )	OR
					NOT [ g.Module_JSON ].JSON_Input_Number( 	'o', 'Customer_ID',		l.customer_id, -1, -1 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT Waitlist_Form_Add_Runtime_LowLevel( l.product_code, l.variant_id, l.email, l.customer_id, 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "Waitlist_API" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Available Functions ( g.WaitlistFunction )
	|		Waitlist_Add
	|			g.Product_Code, g.Variant_ID, g.Email
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'application/json' ) }">

	<MvASSIGN NAME = "l.function" VALUE = "{ toupper( [ g.Module_JSON ].JSON_Decode( g.WaitlistFunction ) ) }">

	<MvIF EXPR = "{ ISNULL l.function }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', 'Missing WaitlistFunction' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.function EQ 'WAITLIST_ADD' }">
		<MvASSIGN NAME = "l.email"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Email ) }">
		<MvASSIGN NAME = "l.product_code"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Product_Code ) }">
		<MvASSIGN NAME = "l.variant_id"		VALUE = "{ int( [ g.Module_JSON ].JSON_Decode( g.Variant_ID ) ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Email( g.Email ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', 'Please enter a valid email.' ) }">
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.product_code }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', 'Missing Product Code.' ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Runtime_Product_Load_Code_Cached( l.product_code, l.product ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', 'Invalid Product Code.' ) }">
		</MvIF>
	
		<MvIF EXPR = "{ l.variant_id EQ 0 }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].ProductVariantList_Load_Product( l.product:id, l.productvariants ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', 'A valid variant was not found.' ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].ProductVariantPartList_Load_Variant( l.product:id, l.variant_id, l.productvariantparts ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', 'Invalid variant.' ) }">
		</MvIF>
	
		<MvASSIGN NAME = "l.waitlist:product_id"	VALUE = "{ l.product:id }">
		<MvASSIGN NAME = "l.waitlist:variant_id"	VALUE = "{ l.variant_id }">
		<MvASSIGN NAME = "l.waitlist:email"			VALUE = "{ l.email }">
		<MvASSIGN NAME = "l.waitlist:cust_id" 		VALUE = "{ int( g.Basket:cust_id ) }">

		<MvIF EXPR = "{ l.waitlist:cust_id GT 0 }">
			<MvIF EXPR = "{ Waitlist_Check_Customer( l.waitlist:product_id, l.waitlist:variant_id, l.waitlist:cust_id, l.existing_waitlist ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', 'Customer is already on the Waitlist for this product.' ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ Waitlist_Check_Email( l.waitlist:product_id, l.waitlist:variant_id, l.waitlist:email, l.existing_waitlist ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', 'Email is already on the Waitlist for this product.' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT Waitlist_PreLogic_Override( l.waitlist ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', g.Error_Message ) }">
		</MvIF>
	
		<MvIF EXPR = "{ NOT Waitlist_Insert( l.waitlist ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', 'Invalid WaitlistFunction' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
|	Component Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Waitlist_API_URL" PARAMETERS = "module var, return var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.return" VALUE = "{ g.json_url $ 'Module_Code=' $ encodeattribute( l.module:code ) $ '&Store_Code=' $ encodeattribute( g.Store:code ) $ '&Function=Module&Module_Function=Waitlist_API' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CurrentWaitlistCount" PARAMETERS = "product_id, variant_id, count var" STANDARDOUTPUTLEVEL = ""  ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.variant_id }">
		<MvASSIGN NAME = "l.variant_id" VALUE = 0>
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGWaitlist"
				QUERY	= "{ 'SELECT COUNT( id ) AS total_count FROM ' $ g.Store_Table_Prefix $ 'TGWaitlist
							  WHERE
							  product_id	= ?,
							  variant_id	= ?' }"
				FIELDS	= "l.product_id, l.variant_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGWaitlist.d.EOF }">
		<MvASSIGN NAME = "l.count"	VALUE = 0>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGWaitlist">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.count"		VALUE = "{ TGWaitlist.d.total_count }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Reports">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "WaitlistXCustomer_Load" PARAMETERS = "cust_id, return var" STANDARDOUTPUTLEVEL = ""   ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGWaitlist"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGWaitlist
							  WHERE
							  cust_id	= ?' }"
				FIELDS	= "l.cust_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.waitlist_count" VALUE = 0>
	<MvWHILE EXPR = "{ NOT TGWaitlist.d.EOF }">
		<MvASSIGN NAME = "l.waitlist_count" VALUE = "{ l.waitlist_count + 1 }">
		<MvEVAL EXPR = "{ Waitlist_Read( l.return[ l.waitlist_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "TGWaitlist" ROWS = 1>
	</MvWHILE>

	<MvFOREACH ITERATOR = "l.waitlist" ARRAY = "l.return" COUNT = "{ l.waitlist_count }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Runtime_Product_Load_ID( l.waitlist:product_id, l.waitlist:product ) }">
		<MvEVAL EXPR = "{ Waitlist_Email_Format( l.waitlist ) }">
	</MvFOREACH>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGWaitlist">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( '#Error#', l.waitlist_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "WaitlistXEmail_Load" PARAMETERS = "email, return var" STANDARDOUTPUTLEVEL = ""  ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGWaitlist"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGWaitlist
							  WHERE
							  email	= ?' }"
				FIELDS	= "l.email">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.waitlist_count" VALUE = 0>
	<MvWHILE EXPR = "{ NOT TGWaitlist.d.EOF }">
		<MvASSIGN NAME = "l.waitlist_count" VALUE = "{ l.waitlist_count + 1 }">
		<MvEVAL EXPR = "{ Waitlist_Read( l.return[ l.waitlist_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "TGWaitlist" ROWS = 1>
	</MvWHILE>

	<MvFOREACH ITERATOR = "l.waitlist" ARRAY = "l.return" COUNT = "{ l.waitlist_count }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Runtime_Product_Load_ID( l.waitlist:product_id, l.waitlist:product ) }">
		<MvEVAL EXPR = "{ Waitlist_Email_Format( l.waitlist ) }">
	</MvFOREACH>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGWaitlist">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( '#Error#', l.waitlist_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Parse_Function_Parameters" PARAMETERS = "string, function_name var, parameters var, parameter_count var" STANDARDOUTPUTLEVEL = "">	
	<MvASSIGN NAME = "l.parameter_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.loop_counter" 		VALUE = 0>
	<MvASSIGN NAME = "l.string" 			VALUE = "{ trim( l.string ) }">
	<MvASSIGN NAME = "l.starting_pos" 		VALUE = "{ indexof( '(', l.string, 1 ) + 1 }">
	<MvASSIGN NAME = "l.function_name" 		VALUE = "{ tolower( substring_var( l.string, 1, l.starting_pos - 2 ) ) }">
	
	<MvIF EXPR = "{ l.starting_pos EQ 1 }">
		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Expected \'(\' to start the function call' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ ISNULL l.function_name }">
		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Missing function name' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ substring_var( l.string, len_var( l.string ), 1 ) NE ')' }">
		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Expected \')\' to end the function call' ) }">
	</MvIF>

	<MvWHILE EXPR = "{ 1 }">
		<MvASSIGN NAME = "l.quote_pos" 		VALUE = "{ indexof( '\'', l.string, l.starting_pos ) }">
		<MvASSIGN NAME = "l.end_quote_pos" 	VALUE = "{ indexof( '\'', l.string, l.quote_pos + 1 ) }">
		<MvASSIGN NAME = "l.comma_pos" 		VALUE = "{ indexof( ',', l.string, l.starting_pos ) }">

		<MvIF EXPR = "{ l.quote_pos AND NOT l.end_quote_pos }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Missing single quote' ) }">
		</MvIF>
		
		<MvWHILE EXPR = "{ ( l.comma_pos LT l.end_quote_pos ) AND ( l.comma_pos GT l.quote_pos ) }"> <MvCOMMENT> comma in a quoted string </MvCOMMENT>
			<MvASSIGN NAME = "l.comma_pos" VALUE = "{ indexof( ',', l.string, l.comma_pos + 1 ) }">
		</MvWHILE>
		
		<MvIF EXPR = "{ l.comma_pos EQ 0 }"> <MvCOMMENT> on the last parameter or we only have 1 parameter </MvCOMMENT>
			<MvASSIGN NAME = "l.start" 			VALUE = "{ l.starting_pos }">
			<MvASSIGN NAME = "l.end" 			VALUE = "{ len_var( l.string ) - l.starting_pos }">
			<MvASSIGN NAME = "l.starting_pos" 	VALUE = "{ len_var( l.string ) }">
			<MvASSIGN NAME = "l.quote_pos" 		VALUE = 0>
		<MvELSE> <MvCOMMENT> if there are more commas to come, grab from the start to the comma</MvCOMMENT>
			<MvASSIGN NAME = "l.start" 			VALUE = "{ l.starting_pos }">
			<MvASSIGN NAME = "l.end" 			VALUE = "{ l.comma_pos - l.starting_pos }">
			<MvASSIGN NAME = "l.starting_pos" 	VALUE = "{ l.comma_pos + 1 }">
		</MvIF>

		<MvASSIGN NAME = "l.param" VALUE = "{ trim( substring_var( l.string, l.start, l.end ) ) }">
		
		<MvIF EXPR = "{ ISNULL l.param }">
			<MvIF EXPR = "{ l.comma_pos EQ 0 AND l.parameter_count EQ 0 }">
				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>
			
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Parameter number ' $ ( ++l.parameter_count ) $ ' cannot be empty' ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.parameters" INDEX = "{ ++l.parameter_count }" VALUE = "{ l.param }">
		
		<MvIF EXPR = "{ l.quote_pos EQ 0 AND l.comma_pos EQ 0 }">
			<MvWHILESTOP>
		</MvIF>

		<MvIF EXPR = "{ l.loop_counter GT 1000 }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Error parsing parameters' ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.loop_counter" VALUE = "{ l.loop_counter + 1 }">
	</MvWHILE>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Parameter_Error" PARAMETERS = "param, message" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.error_count"														VALUE = "{ miva_array_elements( g.Session:wailist ) }">
	<MvASSIGN NAME = "g.Session:wailist" INDEX = "{ l.error_count + 1 }" MEMBER = "param"	VALUE = "{ l.param }">
	<MvASSIGN NAME = "g.Session:wailist" INDEX = "{ l.error_count + 1 }" MEMBER = "message"	VALUE = "{ l.message }">
	
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Is_Variable" PARAMETERS = "variable var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.valid_chars" 		VALUE = "_.: ">
	<MvASSIGN NAME = "l.square_bracket_pos" VALUE = 0>
	<MvASSIGN NAME = "l.bracket_count" 		VALUE = 0>

	<MvFOR INDEX = "l.pos" COUNT = "{ len_var( l.variable ) }">
		<MvASSIGN NAME = "l.char" VALUE = "{ substring_var( l.variable, l.pos, 1 ) }">

		<MvIF EXPR = "{ l.pos EQ 1 }">
			<MvIF EXPR = "{ ( NOT isalpha( l.char ) ) AND
							( l.char NE '_' ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
			
			<MvFORCONTINUE>
		</MvIF>
		
		<MvIF EXPR = "{ l.char EQ '[' }">
			<MvASSIGN NAME = "l.bracket_count" 				VALUE = "{ l.bracket_count + 1 }">
			<MvASSIGN NAME = "l.opening_square_bracket_pos" VALUE = "{ indexof( '[', l.variable, l.pos + 1 ) }">
			<MvASSIGN NAME = "l.closing_square_bracket_pos" VALUE = "{ indexof( ']', l.variable, l.pos ) }">
			
			<MvIF EXPR = "{ ( l.opening_square_bracket_pos GT 0 ) AND
							( l.opening_square_bracket_pos LT l.closing_square_bracket_pos ) }">
				<MvASSIGN NAME = "l.pos" VALUE = "{ l.opening_square_bracket_pos - 1 }">
			<MvELSEIF EXPR = "{ l.closing_square_bracket_pos GT 0 }">
				<MvASSIGN NAME = "l.pos" VALUE = "{ l.closing_square_bracket_pos - 1 }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.char EQ ']' }">
			<MvASSIGN NAME = "l.bracket_count" 				VALUE = "{ l.bracket_count - 1 }">
			<MvASSIGN NAME = "l.opening_square_bracket_pos" VALUE = "{ indexof( '[', l.variable, l.pos ) }">
			<MvASSIGN NAME = "l.closing_square_bracket_pos" VALUE = "{ indexof( ']', l.variable, l.pos + 1 ) }">
			
			<MvIF EXPR = "{ ( l.opening_square_bracket_pos GT 0 ) AND
							( l.opening_square_bracket_pos LT l.closing_square_bracket_pos ) }">
				<MvASSIGN NAME = "l.pos" VALUE = "{ l.opening_square_bracket_pos - 1 }">
			<MvELSEIF EXPR = "{ l.closing_square_bracket_pos GT 0 }">
				<MvASSIGN NAME = "l.pos" VALUE = "{ l.closing_square_bracket_pos - 1 }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ ( NOT isdigit( l.char ) ) AND
							( NOT isalpha( l.char ) ) AND
							( NOT ( l.char IN l.valid_chars ) ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOR>
	
	<MvIF EXPR = "{ l.bracket_count NE 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	Batchlist HTML/ CSS Output Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Element_Waitlist_List_CSS" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Element_Waitlist_List_CSS }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvASSIGN NAME = "g.Element_Waitlist_List_CSS" VALUE = 1>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_CSS() }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_Waitlist_Sent_List_CSS" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Element_Waitlist_Sent_List_CSS }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvASSIGN NAME = "g.Element_Waitlist_Sent_List_CSS" VALUE = 1>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_CSS() }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_Waitlist_List_JavaScript" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "html, text, compresswhitespace">
	<MvIF EXPR = "{ g.Element_Waitlist_List_JavaScript }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvASSIGN NAME = "g.Element_Waitlist_List_JavaScript" VALUE = 1>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_JavaScript() }">
	<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=' $ encodeattribute( l.module:code ) $ '&Filename=Waitlist_List.js' }"></script>
</MvFUNCTION>

<MvFUNCTION NAME = "Element_Waitlist_Sent_List_JavaScript" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "html, text, compresswhitespace">
	<MvIF EXPR = "{ g.Element_Waitlist_Sent_List_JavaScript }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvASSIGN NAME = "g.Element_Waitlist_Sent_List_JavaScript" VALUE = 1>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_JavaScript() }">
	<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=' $ encodeattribute( l.module:code ) $ '&Filename=Waitlist_Sent_List.js' }"></script>
</MvFUNCTION>

<MvFUNCTION NAME = "Element_Waitlist_List_HTML" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Element_Waitlist_List_HTML }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "g.Element_Waitlist_List_HTML" VALUE = 1>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_HTML() }">

	<div id="Waitlist_Batchlist"></div>
</MvFUNCTION>

<MvFUNCTION NAME = "Element_Waitlist_Sent_List_HTML" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Element_Waitlist_Sent_List_HTML }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "g.Element_Waitlist_Sent_List_HTML" VALUE = 1>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_HTML() }">

	<div id="Waitlist_Sent_Batchlist"></div>
</MvFUNCTION>
